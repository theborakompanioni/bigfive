buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE')
    }
}

plugins {
    id 'nebula.project' version '3.3.0'
    id 'nebula.lint' version '7.2.0'
    id 'nebula.release' version '4.2.0'
    id 'nebula.dependency-lock' version '4.9.3'
    id 'nebula.info' version '3.5.2'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.STARTED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED
        showExceptions true
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

sourceSets {
    main.java.srcDir 'src/main/java'
    test.java.srcDir 'src/test/java'
}

test {
    // * enable on demand
    // testLogging.showStandardStreams = true
}

jar {
    //manifest.attributes "Main-Class": "org.tbk.bigfive.Application"

    baseName = 'tbk-bigfive'
    version = '0.0.1-SNAPSHOT'
}

task copyIonicAppToStatic(type: Copy) {
    from 'src/main/ionic/www'
    into 'src/main/resources/static/apps/bigfive'
}
assemble.dependsOn copyIonicAppToStatic


bootRepackage {
    mainClass = 'org.tbk.bigfive.Application'
}

repositories {
    mavenCentral()
}

dependencies {
    // tag::jetty[]
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-jetty')
    // end::jetty[]

    compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.7')

    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.zaxxer:HikariCP:2.6.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compile('org.xerial:sqlite-jdbc:3.16.1')

    compile('io.reactivex.rxjava2:rxjava:2.0.5')

    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-devtools')

    compile('com.google.guava:guava:19.0')
    compile('org.apache.commons:commons-lang3:3.5')
    compileOnly('org.projectlombok:lombok:1.16.14')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    // temporarily disabled to focus on sqlite
    //testCompile('com.h2database:h2')
}
